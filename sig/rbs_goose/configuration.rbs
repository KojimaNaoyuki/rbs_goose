class RbsGoose::Configuration
  @llm: ::Langchain::LLM::OpenAI
  def initialize: () ?{ () -> untyped } -> void
  attr_accessor llm: ::Langchain::LLM::OpenAI
  attr_accessor instruction: String
  attr_accessor examples: ::Array[{ typed_ruby: RbsGoose::IO::TypedRuby, refined_rbs: RbsGoose::IO::File }]
  def use_open_ai: (String open_ai_access_token, ?default_options: ::Hash[Symbol, String]) -> untyped
  private def default_instruction: () -> String
  private def default_examples: () -> ::Array[{ typed_ruby: RbsGoose::IO::TypedRuby, refined_rbs: RbsGoose::IO::File }]
  private def company_repository_typed: () -> RbsGoose::IO::TypedRuby
  private def company_repository_code: () -> RbsGoose::IO::File
  private def company_repository_rbs: () -> RbsGoose::IO::File
  private def company_repository_refined_rbs: () -> RbsGoose::IO::File
end